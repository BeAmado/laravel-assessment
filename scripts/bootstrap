BASE_DIR=$(dirname $(readlink -f $0))/..
COMPOSER_DIR=$BASE_DIR/composer
DOCKER_DIR=$BASE_DIR/docker
LOGS_DIR=$BASE_DIR/logs
SCRIPTS_DIR=$BASE_DIR/scripts
ENV_FILE=$BASE_DIR/.env

app_run()
{
    docker_sudo docker-compose run --rm \
        -e COMPOSER_HOME=/mnt/src/composer \
        --volume=$BASE_DIR:/mnt/src \
        --workdir=/mnt/src \
        --user="$(id -u):$(id -g)" \
        app $@ 
}

artisan_run()
{
    php_run artisan $@
}

composer_run()
{
    app_run composer/composer.phar $@
}

create_logs_dir()
{
    if [ ! -e $LOGS_DIR ]
    then
        mon_sudo mkdir -p $LOGS_DIR
    fi
}

current_dir()
{
    echo $(dirname $(readlink -f $0))
}

docker_sudo()
{
    if [ ! $(current_dir) = $DOCKER_DIR ]
    then
        cd $DOCKER_DIR
    fi

    if [ $(id docker) ]
    then
        $@
    else
        sudo $@
    fi
}

mon_sudo()
{
    if [ $(id -u) != 0 ]
    then 
        sudo $@
    else
        $@
    fi
}

php_run()
{
    app_run php $@
}

set_storage_permissions()
{
    STORAGE_DIR=$BASE_DIR/storage

    mon_sudo chmod 775 $STORAGE_DIR

    if \
        [ ! $(ls -g $BASE_DIR | grep $STORAGE_DIR | grep www-data) ] || \
        [ $(ls -g $STORAGE_DIR | grep -v www-data | wc -l) > 0 ]
    then
        mon_sudo chgrp -R www-data $STORAGE_DIR
    fi

    if \
        [ ! $(ls -lG $BASE_DIR | grep $STORAGE_DIR | grep $(id -un)) ] || \
        [ $(ls -lG $STORAGE_DIR | grep -v $(id -un) | wc -l) > 0 ]
    then
        mon_sudo chown -R $(id -un) $STORAGE_DIR
    fi

    mon_sudo find $STORAGE_DIR \
        \( -type f -exec chmod 664 {} \; \) -o \
        \( -type d -exec chmod 775 {} \; \)
}
